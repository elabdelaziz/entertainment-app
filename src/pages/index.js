import Head from 'next/head';
import { useEffect, useState } from 'react';
import dataList from '../../data.json';
import AppLayout from '../components/AppLayout';
import TrendingCard from '../components/TrendingCard';
import MainCard from '../components/MainCard';
import useLocalStorage from '../hooks/useLocalStorage';

export default function Home() {
  const [data, setData] = useState([]);
  const [trending, setTrending] = useState([]);
  const [recommended, setRecommended] = useState([]);
  const [loading, setLoading] = useState(false);

  const moviesData = [];
  const tvData = [];
  const bookmarkedData = [];

  const [tv, setTv] = useLocalStorage('tv', []);
  const [, setMovies] = useLocalStorage('movies', []);
  const [, setBookmarked] = useLocalStorage('bookmark', []);

  console.log(tv);

  useEffect(() => {
    setData(dataList);
  }, []);

  useEffect(() => {
    if (trending.length === 0) {
      setLoading(true);
      data.map((item) => {
        item.category === 'Movie' && moviesData.push(item);
        item.category === 'TV' && tvData.push(item);
        item.isBookmarked && bookmarkedData.push(item);
        item.isTrending && setTrending((oldTrending) => [...oldTrending, item]);
        item.isRecommended && setRecommended((oldRec) => [...oldRec, item]);
      });
      setMovies(moviesData);
      setTv(tvData);
      setBookmarked(bookmarkedData);
      setLoading(false);
    }
  }, [data, trending]);

  if (loading) {
    return <div>Loading</div>;
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppLayout>
        <h2 className="text-white text-[26px] my-[2rem]">Trending</h2>
        <section className="flex h-fit overflow-x-scroll pb-[10px]">
          {trending.map((show, i) => (
            <TrendingCard key={i} item={show} />
          ))}
        </section>
        <section className="mt-[3rem]">
          <h2 className="text-white text-[26px] my-[2rem]">Recommended</h2>
          <div className="grid grid-cols-[repeat(auto-fill,minmax(250px,1fr))] gap-[clamp(1.25rem,1%,1%)_clamp(1rem,2%,2%)] max-[1271px]:gap-[1rem]">
            {recommended.length > 0 &&
              recommended.map((show, i) => <MainCard key={i} item={show} />)}
          </div>
        </section>
      </AppLayout>
    </>
  );
}
